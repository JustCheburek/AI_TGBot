async def build_full_context(    user_query: str,    username: str | None = None,    k: int = config.RAG_TOP_K,    max_chars: int = 2000,) -> str:    """RU: Собирает динамический контекст сервера, данные игрока и фрагменты RAG."""    sections: list[str] = []    # RU: Динамический контекст сервера    try:        payload = await mc.fetch_status()        server_ctx = mc.format_status_text(payload)        if server_ctx:            sections.append(f"Пиши про статус, только когда просят\n{server_ctx}\n")    except Exception:        logging.exception("RAG: failed to fetch server status")    # RU: Динамический контекст игрока    if username:        try:            player_info = await fetch_player_by_nick(username)            if player_info:                sections.append(f"Игрок (из MineBridge API):\nИспользуй данные аккаунта, только когда просят\n{json.dumps(player_info, ensure_ascii=False)}\n")        except Exception:            logging.exception("RAG: failed to fetch player info")                sections.append(f"Текущая дата: {datetime.now()}")    # RU: База знаний через семантический поиск    results = await search(user_query, k=k)    if results:        total = 0        kb_parts: list[str] = []        for ch, _sc in results:            snippet = (ch.get("text") or "").strip()            if not snippet:                continue            if total + len(snippet) > max_chars:                snippet = snippet[: max(0, max_chars - total)]            if snippet:                kb_parts.append(snippet)                total += len(snippet)            if total >= max_chars:                break        if kb_parts:            sections.append("\n".join(kb_parts))    return "\n\n".join([s for s in sections if s])